#
# Copyright © 2016-2025 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# HTTP server parameters
server:
  # HTTP Server bind address
  address: "${HTTP_BIND_ADDRESS:0.0.0.0}"
  # HTTP Server bind port
  port: "${HTTP_BIND_PORT:8082}"

# Kafka parameters
queue:
  integration-downlink:
    # Interval in milliseconds to poll messages from 'tbmq.ie.downlink' topics
    poll-interval: "${TB_IE_DOWNLINK_POLL_INTERVAL:1000}"
  integration-msg:
    # Interval in milliseconds to poll messages from 'tbmq.msg.ie' topics
    poll-interval: "${TB_IE_MSG_POLL_INTERVAL:1000}"
    # Timeout in milliseconds for processing the pack of messages
    pack-processing-timeout: "${TB_IE_MSG_PACK_PROCESSING_TIMEOUT:30000}"
    ack-strategy:
      # Processing strategy for 'tbmq.msg.ie' topics. Can be: SKIP_ALL, RETRY_ALL
      type: "${TB_IE_MSG_ACK_STRATEGY_TYPE:SKIP_ALL}"
      # Number of retries, 0 is unlimited. Use for RETRY_ALL processing strategy
      retries: "${TB_IE_MSG_ACK_STRATEGY_RETRIES:5}"
      # Time in seconds to wait in consumer thread before retries
      pause-between-retries: "${TB_IE_MSG_ACK_STRATEGY_PAUSE_BETWEEN_RETRIES:1}"

  kafka:
    # List of kafka bootstrap servers used to establish connection
    bootstrap.servers: "${TB_KAFKA_SERVERS:localhost:9092}"
    # Controls whether TBMQ is allowed to delete Kafka topics that were created for
    # Integrations.
    # When set to 'true', TBMQ may automatically remove topics during cleanup
    # (for example, when the Integration is deleted).
    # When set to 'false', TBMQ will skip topic deletions and simply stop using them.
    # This helps prevent accidental data loss in production environments
    enable-topic-deletion: "${TB_KAFKA_ENABLE_TOPIC_DELETION:true}"
    default:
      consumer:
        # A list of class names or class types, ordered by preference, of supported partition assignment strategies that the client will use to distribute partition ownership amongst consumer instances when group management is used
        partition-assignment-strategy: "${TB_KAFKA_DEFAULT_CONSUMER_PARTITION_ASSIGNMENT_STRATEGY:org.apache.kafka.clients.consumer.StickyAssignor}"
        # The timeout in milliseconds used to detect client failures when using Kafka's group management facility
        session-timeout-ms: "${TB_KAFKA_DEFAULT_CONSUMER_SESSION_TIMEOUT_MS:10000}"
        # The maximum delay in milliseconds between invocations of poll() when using consumer group management
        max-poll-interval-ms: "${TB_KAFKA_DEFAULT_CONSUMER_MAX_POLL_INTERVAL_MS:300000}"
        # The maximum number of records returned in a single call to poll()
        max-poll-records: "${TB_KAFKA_DEFAULT_CONSUMER_MAX_POLL_RECORDS:2000}"
        # The maximum amount of data in bytes per-partition the server will return
        max-partition-fetch-bytes: "${TB_KAFKA_DEFAULT_CONSUMER_MAX_PARTITION_FETCH_BYTES:16777216}"
        # The maximum amount of data in bytes the server should return for a fetch request
        fetch-max-bytes: "${TB_KAFKA_DEFAULT_CONSUMER_FETCH_MAX_BYTES:134217728}"
        # The expected time between heartbeats to the consumer coordinator when using Kafka’s group management facilities.
        # Heartbeats are used to ensure that the consumer’s session stays active and to facilitate rebalancing when new consumers join or leave the group.
        # The value must be set lower than TB_KAFKA_DEFAULT_CONSUMER_SESSION_TIMEOUT_MS, but typically should be set no higher than 1/3 of that value.
        # It can be adjusted even lower to control the expected time for normal rebalances. Value in milliseconds. Default is 3 sec
        heartbeat-interval-ms: "${TB_KAFKA_DEFAULT_CONSUMER_HEARTBEAT_INTERVAL_MS:3000}"
      producer:
        # The number of acknowledgments the producer requires the leader to have received before considering a request complete
        acks: "${TB_KAFKA_DEFAULT_PRODUCER_ACKS:1}"
        # Setting a value greater than zero will cause the client to resend any record whose send fails with a potentially transient error
        retries: "${TB_KAFKA_DEFAULT_PRODUCER_RETRIES:1}"
        # The producer will attempt to batch records together into fewer requests whenever multiple records are being sent to the same partition. Size in bytes
        batch-size: "${TB_KAFKA_DEFAULT_PRODUCER_BATCH_SIZE:16384}"
        # The producer groups together any records that arrive in between request transmissions into a single batched request, set in milliseconds
        linger-ms: "${TB_KAFKA_DEFAULT_PRODUCER_LINGER_MS:5}"
        # The total bytes of memory the producer can use to buffer records waiting to be sent to the server
        buffer-memory: "${TB_KAFKA_DEFAULT_PRODUCER_BUFFER_MEMORY:33554432}"
        # The compression type for all data generated by the producer. Valid values are `none`, `gzip`, `snappy`, `lz4`, or `zstd`
        compression-type: "${TB_KAFKA_DEFAULT_COMPRESSION_TYPE:none}"
    admin:
      # List of configs separated by semicolon used for admin kafka client creation
      config: "${TB_KAFKA_ADMIN_CONFIG:retries:1}"
      # Kafka Admin client command timeout (in seconds). Applies to operations like describeCluster, listTopics, etc
      command-timeout: "${TB_KAFKA_ADMIN_COMMAND_TIMEOUT_SEC:30}"
    consumer-stats:
      # Prints lag if enabled between consumer group offset and last messages offset in Kafka topics
      enabled: "${TB_KAFKA_CONSUMER_STATS_ENABLED:true}"
      # Statistics printing interval in milliseconds for Kafka's consumer-groups stats
      print-interval-ms: "${TB_KAFKA_CONSUMER_STATS_PRINT_INTERVAL_MS:60000}"
      # Time to wait in milliseconds for the stats-loading requests to Kafka to finish
      kafka-response-timeout-ms: "${TB_KAFKA_CONSUMER_STATS_RESPONSE_TIMEOUT_MS:1000}"
      # List of configs separated by semicolon used for kafka stats consumer
      consumer-config: "${TB_KAFKA_CONSUMER_STATS_CONSUMER_CONFIG:}"
    integration-downlink:
      # Prefix for topics for sending integration configurations and validation requests from tbmq to integration executors
      topic-prefix: "${TB_KAFKA_IE_DOWNLINK_TOPIC_PREFIX:tbmq.ie.downlink}"
      http:
        # Kafka topic properties separated by semicolon for `tbmq.ie.downlink.http` topic
        topic-properties: "${TB_KAFKA_IE_DOWNLINK_HTTP_TOPIC_PROPERTIES:retention.ms:604800000;segment.bytes:26214400;retention.bytes:1048576000;partitions:6;replication.factor:1}"
        # Additional Kafka consumer configs separated by semicolon for `tbmq.ie.downlink.http` topic
        additional-consumer-config: "${TB_KAFKA_IE_DOWNLINK_HTTP_ADDITIONAL_CONSUMER_CONFIG:}"
        # Additional Kafka producer configs separated by semicolon for `tbmq.ie.downlink.http` topic
        additional-producer-config: "${TB_KAFKA_IE_DOWNLINK_HTTP_ADDITIONAL_PRODUCER_CONFIG:}"
      kafka:
        # Kafka topic properties separated by semicolon for `tbmq.ie.downlink.kafka` topic
        topic-properties: "${TB_KAFKA_IE_DOWNLINK_KAFKA_TOPIC_PROPERTIES:retention.ms:604800000;segment.bytes:26214400;retention.bytes:1048576000;partitions:6;replication.factor:1}"
        # Additional Kafka consumer configs separated by semicolon for `tbmq.ie.downlink.kafka` topic
        additional-consumer-config: "${TB_KAFKA_IE_DOWNLINK_KAFKA_ADDITIONAL_CONSUMER_CONFIG:}"
        # Additional Kafka producer configs separated by semicolon for `tbmq.ie.downlink.kafka` topic
        additional-producer-config: "${TB_KAFKA_IE_DOWNLINK_KAFKA_ADDITIONAL_PRODUCER_CONFIG:}"
      mqtt:
        # Kafka topic properties separated by semicolon for `tbmq.ie.downlink.mqtt` topic
        topic-properties: "${TB_KAFKA_IE_DOWNLINK_MQTT_TOPIC_PROPERTIES:retention.ms:604800000;segment.bytes:26214400;retention.bytes:1048576000;partitions:6;replication.factor:1}"
        # Additional Kafka consumer configs separated by semicolon for `tbmq.ie.downlink.mqtt` topic
        additional-consumer-config: "${TB_KAFKA_IE_DOWNLINK_MQTT_ADDITIONAL_CONSUMER_CONFIG:}"
        # Additional Kafka producer configs separated by semicolon for `tbmq.ie.downlink.mqtt` topic
        additional-producer-config: "${TB_KAFKA_IE_DOWNLINK_MQTT_ADDITIONAL_PRODUCER_CONFIG:}"
    integration-uplink:
      # Topic for sending messages/events from integration executors to tbmq
      topic: "${TB_KAFKA_IE_UPLINK_TOPIC:tbmq.ie.uplink}"
      # Kafka topic properties separated by semicolon for `tbmq.ie.uplink` topic
      topic-properties: "${TB_KAFKA_IE_UPLINK_TOPIC_PROPERTIES:retention.ms:604800000;segment.bytes:26214400;retention.bytes:1048576000;partitions:6;replication.factor:1}"
      # Additional Kafka consumer configs separated by semicolon for `tbmq.ie.uplink` topic
      additional-consumer-config: "${TB_KAFKA_IE_UPLINK_ADDITIONAL_CONSUMER_CONFIG:}"
      # Additional Kafka producer configs separated by semicolon for `tbmq.ie.uplink` topic
      additional-producer-config: "${TB_KAFKA_IE_UPLINK_ADDITIONAL_PRODUCER_CONFIG:}"
    integration-uplink-notifications:
      # Prefix for topics for sending notifications or replies from integration executors to specific tbmq node
      topic-prefix: "${TB_KAFKA_IE_UPLINK_NOTIF_TOPIC_PREFIX:tbmq.ie.uplink.notifications}"
      # Kafka topic properties separated by semicolon for `tbmq.ie.uplink.notifications` topics
      topic-properties: "${TB_KAFKA_IE_UPLINK_NOTIF_TOPIC_PROPERTIES:retention.ms:604800000;segment.bytes:26214400;retention.bytes:1048576000;partitions:1;replication.factor:1}"
      # Additional Kafka consumer configs separated by semicolon for `tbmq.ie.uplink.notifications` topic
      additional-consumer-config: "${TB_KAFKA_IE_UPLINK_NOTIF_ADDITIONAL_CONSUMER_CONFIG:}"
      # Additional Kafka producer configs separated by semicolon for `tbmq.ie.uplink.notifications` topic
      additional-producer-config: "${TB_KAFKA_IE_UPLINK_NOTIF_ADDITIONAL_PRODUCER_CONFIG:}"
    integration-msg:
      # Kafka topic properties separated by semicolon for `tbmq.msg.ie` topics
      topic-properties: "${TB_KAFKA_IE_MSG_TOPIC_PROPERTIES:retention.ms:604800000;segment.bytes:26214400;retention.bytes:1048576000;replication.factor:1}"
      # Additional Kafka consumer configs separated by semicolon for `tbmq.msg.ie` topics
      additional-consumer-config: "${TB_KAFKA_IE_MSG_ADDITIONAL_CONSUMER_CONFIG:max.poll.records:50}"
      # Additional Kafka producer configs separated by semicolon for `tbmq.msg.ie` topics
      additional-producer-config: "${TB_KAFKA_IE_MSG_ADDITIONAL_PRODUCER_CONFIG:}"
    # The common prefix for all Kafka topics, producers, consumer groups, and consumers. Defaults to empty string meaning no prefix is added
    kafka-prefix: "${TB_KAFKA_PREFIX:}"
    # Custom consumer configuration per Kafka topic
    consumer-properties-per-topic:
      tbmq.msg.app.test_client:
#        - key: max.poll.records
#          value: "${TB_KAFKA_APP_TEST_CLIENT_MAX_POLL_RECORDS:512}"

# Service parameters
service:
  # Microservice type. Allowed value: tbmq-integration-executor
  type: "${TB_SERVICE_TYPE:tbmq-integration-executor}"
  # Unique id for this service (autogenerated if empty)
  id: "${TB_SERVICE_ID:}"
  integrations:
    # Allow to enable integration on microservice integration executor.
    # Allowed values: HTTP, KAFKA, MQTT. By default, ALL
    supported: "${TB_SERVICE_INTEGRATIONS_SUPPORTED:ALL}"
    # List of integrations to exclude from processing on service/microservice integration executor.
    # Allowed values: HTTP, KAFKA, MQTT. By default, NONE
    excluded: "${TB_SERVICE_INTEGRATIONS_EXCLUDED:NONE}"

# Integration common parameters
integrations:
  statistics:
    # Enable/disable integrations statistics
    enabled: "${INTEGRATIONS_STATISTICS_ENABLED:true}"
    # Integration statistic persistence frequency in milliseconds
    persist-frequency: "${INTEGRATIONS_STATISTICS_PERSIST_FREQUENCY:3600000}"
  init:
    # Maximum connection timeout allowed for integrations in seconds. Any greater user defined timeout will be reduced down to this limit
    connection-timeout-sec: "${INTEGRATIONS_INIT_CONNECTION_TIMEOUT_SEC:15}"
    # Connection check timeout for API request in seconds
    connection-check-api-request-timeout-sec: "${INTEGRATIONS_INIT_CONNECTION_CHECK_API_REQUEST_TIMEOUT_SEC:20}"
  reinit:
    # Enable/disable integrations hot reinitialization. This process is done for integrations with state 'FAILED'
    enabled: "${INTEGRATIONS_REINIT_ENABLED:true}"
    # Checking interval in milliseconds for reinit integrations. Defaults to 5 minutes
    frequency: "${INTEGRATIONS_REINIT_FREQUENCY_MS:300000}"
  destroy:
    # The duration (in milliseconds) to wait during each iteration of the graceful shutdown process for integrations to terminate properly.
    # Default value is set to 1 seconds
    graceful-timeout-ms: "${INTEGRATIONS_DESTROY_TIMEOUT_MS:1000}"
    # The number of iterations to attempt a graceful shutdown before forcefully stopping the process
    count: "${INTEGRATIONS_DESTROY_COUNT:10}"
    # The maximum duration (in milliseconds) to wait before forcefully stopping the application if the graceful shutdown process has not started or exceeds the allowed time
    forced-shutdown-timeout-ms: "${INTEGRATIONS_DESTROY_FORCED_SHUTDOWN_TIMEOUT_MS:15000}"
  # Enable/disable integrations local network hosts
  allow-local-network-hosts: "${INTEGRATIONS_ALLOW_LOCAL_NETWORK_HOSTS:true}"
  uplink:
    # Number of threads in the pool to process callbacks of uplink events to tbmq nodes
    callback-threads-count: "${INTEGRATIONS_UPLINK_THREADS:4}"
  manage:
    # Number of threads in the pool to process lifecycle events (CREATE/UPDATE/DELETE) of integrations
    lifecycle-threads-count: "${INTEGRATIONS_MANAGE_LIFECYCLE_THREADS:4}"
    # Number of threads in the pool to process integration validation requests
    command-threads-count: "${INTEGRATIONS_MANAGE_COMMAND_THREADS:4}"
  external:
    # Number of threads in the pool dedicated to handling external operations, such as producing messages to Kafka topics
    threads-count: "${INTEGRATIONS_EXTERNAL_THREADS:10}"
  netty:
    # Netty shared worker group threads count. Defaults to 0 meaning the threads count is number of availableProcessors * 2.
    # Used to send messages to external MQTT brokers using MQTT bridge (integration)
    threads-count: "${INTEGRATIONS_NETTY_SHARED_GROUP_THREADS:0}"

# Management parameters
management:
  health:
    diskspace:
      # Enable/disable disk space health check
      enabled: "${HEALTH_DISKSPACE_ENABLED:false}"
  endpoint:
    health:
      # Controls whether health endpoint shows full component details (e.g., Redis, DB, TBMQ).
      # Options:
      # - 'never': always hide details (default if security is enabled).
      # - 'when-authorized': show details only to authenticated users.
      # - 'always': always include full health details in the response
      show-details: "${HEALTH_SHOW_DETAILS:never}"
  endpoints:
    web:
      exposure:
        # Specify which Actuator endpoints should be exposed via HTTP.
        # Use 'health,info' to expose only basic health and information endpoints.
        # For exposing Prometheus metrics, update this to include 'prometheus' in the list (e.g., 'health,info,prometheus')
        include: "${METRICS_ENDPOINTS_EXPOSE:health,info,prometheus}"

# Statistics parameters
stats:
  ie:
    # Enable/disable stats printing to the logs
    enabled: "${STATS_IE_ENABLED:true}"
    # Period in milliseconds to print stats. Default value corresponds to 1 minute
    print-interval-ms: "${STATS_IE_PRINT_INTERVAL_MS:60000}"
  timer:
    # Metrics percentiles returned by actuator for timer metrics. List of comma-separated (,) double values
    percentiles: "${STATS_TIMER_PERCENTILES:0.5}"
  system-info:
    # Persist frequency of system info (CPU, memory usage, etc.) in seconds
    persist-frequency: "${STATS_SYSTEM_INFO_PERSIST_FREQUENCY_SEC:60}"

# Event configuration parameters
event:
  error:
    rate-limits:
      # If true rate limits will be active
      enabled: "${EVENT_ERROR_RATE_LIMITS_ENABLED:true}"
      # No more than 5000 messages per hour or 100 messages per minute for all integrations
      integration: "${EVENT_ERROR_RATE_LIMITS_INTEGRATION:5000:3600,100:60}"
      # Time (in minutes) to prevent duplicate persistence of rate limit events once the error event rate limit is reached
      ttl-minutes: "${EVENT_ERROR_RATE_LIMITS_TTL:60}"
